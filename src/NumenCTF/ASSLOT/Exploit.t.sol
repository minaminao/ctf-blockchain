// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

import "foundry-huff/HuffDeployer.sol";
import "forge-std/Test.sol";
import "./challenge/asslot.sol";

contract ExploitTest is Test {
    function test() public {
        address playerAddress = makeAddr("player");
        address asslotAddress = 0x0001020304050607080910111213141516171819;
        Asslot asslot = new Asslot();
        vm.etch(asslotAddress, address(asslot).code);
        asslot = Asslot(asslotAddress);
        vm.deal(playerAddress, 1 ether);

        Solver solver = Solver(HuffDeployer.deploy("NumenCTF/ASSLOT/Solver"));
        emit log_address(address(asslot));
        emit log_address(address(solver));
        emit log_bytes(address(solver).code);
        emit log_uint(address(solver).code.length);

        vm.startPrank(playerAddress, playerAddress);
        address(solver).call{gas: 100000}("");
        vm.stopPrank();
    }
}

interface Solver {
    function f() external;
}
